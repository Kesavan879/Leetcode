/**
 * Return an array of arrays of size *returnSize.
 * The sizes of the arrays are returned as *returnColumnSizes array.
 * Note: Both returned array and *columnSizes array must be malloced, assume caller calls free().
 */
int** matrixReshape(int** mat, int matSize, int* matColSize, int r, int c, int* returnSize, int** returnColumnSizes) {
    if(matSize * matColSize[0] != r * c) {
        *returnSize = matSize;
        *returnColumnSizes = malloc(matSize * sizeof(int));
        for(int i = 0; i < matSize; i++) {
            (*returnColumnSizes)[i] = matColSize[0];
        }
        return mat;
    }
    int* arr = malloc(r * c * sizeof(int));
    for(int i = 0; i < r * c; i++) {
        arr[i] = mat[i / matColSize[0]][i % matColSize[0]];
    }
    int** out = malloc(r * sizeof(int*));
    for(int i = 0; i < r; i++) {
        out[i] = malloc(c * sizeof(int));
    }
    for(int i = 0; i < r; i++) {
        for(int j = 0; j < c; j++) {
            out[i][j] = arr[i * c + j];
        }
    }
    *returnSize = r;
    *returnColumnSizes = malloc(r * sizeof(int));
    for(int i = 0; i < r; i++) {
        (*returnColumnSizes)[i] = c;
    }
    free(arr);
    return out;
}
